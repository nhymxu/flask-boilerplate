[project]
name = "flask-boilerplate"
version = "0.0.0"
description = ""
readme = "README.md"
package-mode = false
authors = [{ name = "nhymxu", email = "contact@dungnt.net" }]
requires-python = "<4.0,>=3.12"
dependencies = [
    "uvicorn[standard]<1.0.0,>=0.30.0",
    "gunicorn<23.0.0,>=22.0.0",
    "a2wsgi<2.0.0,>=1.10.6",
    "flask[async,dotenv]<4.0.0,>=3.0.3",
    "python-dotenv<2.0.0,>=1.0.1",
    "httpx<1.0.0,>=0.27.0",
    "stamina<25.0.0,>=24.2.0",
]

[dependency-groups]
dev = [
    "ruff<1.0.0,>=0.4.3",
]
test = [
    "coverage[toml]<8.0.0,>=7.6.0",
    "pytest<9.0.0,>=8.2.0",
    "pytest-asyncio<1.0.0,>=0.23.8",
    "pytest-cov<6.0.0,>=5.0.0",
    "pytest-mock<4.0.0,>=3.14.0",
    "pytest-order<2.0.0,>=1.2.1",
    "pytest-randomly<4.0.0,>=3.15.0",
    "time-machine<3.0.0,>=2.14.2",
]

[tool.uv]
# Disable automatic locking and syncing of the project
#managed = false
package = false
default-groups = [
#    "dev",
#    "test",
]

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    ".env",
    ".venv",
    "old",
    "build",
    "dist",
    "tests",
    "exclude",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "W",
]
ignore = [
    "F841",
    "W605",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
exclude = [
    'exclude/',
]
ignore_missing_imports = true

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.MASTER]
init-hook="from pylint.config import find_pylintrc; import os, sys; sys.path.append(os.path.dirname(find_pylintrc()))"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
